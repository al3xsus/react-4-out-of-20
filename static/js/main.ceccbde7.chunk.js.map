{"version":3,"sources":["AuxFn.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["checkColor","tickets","ticket_id","panel","id","ticketIndex","findIndex","x","parseInt","Content","Component","constructor","props","super","defaultState","panes","draw","activeIndex","handleAddPane","newState","this","state","pane_id","length","push","returnPane","left","right","setState","generateSimple","generateSimpleDev","param","Array","from","keys","map","item","style","backgroundColor","className","key","onClick","handleClick","i","filter","handleRandom","generateRandomArray","arr","r","Math","floor","random","indexOf","handleClear","menuItem","render","Tab","Pane","attached","Form","Group","widths","Field","textAlign","marginRight","Button","color","basic","floated","icon","content","handleDrawChange","e","value","handleDropAll","handleTabChange","componentDidMount","combinations","factorial","n","result","forEach","ticket","returnCombinations","price","ticketsNum","checkTickets","options","_","text","Grid","columns","Row","Column","width","Segment","menu","secondary","pointing","stackable","onTabChange","Table","Header","HeaderCell","colSpan","Body","Cell","Dropdown","compact","selection","onChange","Footer","disabled","animated","visible","Icon","name","hidden","float","App","Modal","size","open","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ceccbde7.chunk.js","sourcesContent":["export const returnCombinations = tickets => {\n  const factorial = n => {\n    return n === 1 ? n : n * factorial(--n);\n  };\n\n  const combinations = (n, r) => {\n    if (n === r) return 1;\n    else return factorial(n) / (factorial(r) * factorial(n - r));\n  };\n\n  let result = 0;\n  tickets.forEach(ticket => {\n    if (ticket.left.length >= 4 && ticket.right.length >= 4) {\n      result =\n        result +\n        combinations(ticket.left.length, 4) *\n          combinations(ticket.right.length, 4);\n    }\n  });\n  return result;\n};\n\nexport const checkTickets = tickets => {\n  let result = 0;\n  tickets.forEach(ticket => {\n    if (ticket.left.length >= 4 && ticket.right.length >= 4) {\n      result = result + 1;\n    }\n  });\n  return result;\n};\n\nexport const checkColor = (tickets, ticket_id, panel, id) => {\n  const ticketIndex = tickets.findIndex(x => x.id === parseInt(ticket_id));\n  const btnIndex = tickets[ticketIndex][panel].findIndex(x => x === id);\n  if (btnIndex === -1) return \"lightyellow\";\n  else return \"lightgreen\";\n};\n","import React, { Component } from \"react\";\nimport {\n  Tab,\n  Form,\n  Grid,\n  Table,\n  Segment,\n  Dropdown,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { returnCombinations, checkTickets, checkColor } from \"./AuxFn\";\n\nclass Content extends Component {\n  defaultState = {\n    tickets: [],\n    panes: [],\n    draw: 1,\n    activeIndex: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { ...this.defaultState };\n  }\n\n  componentDidMount() {\n    const newState = this.defaultState;\n    newState.panes.push(this.returnPane(1));\n    newState.tickets.push({ id: 1, left: [], right: [] });\n    this.setState(newState);\n  }\n\n  handleAddPane = () => {\n    const newState = { ...this.state };\n    const pane_id = newState.panes.length + 1;\n    newState.panes.push(this.returnPane(pane_id));\n    newState.tickets.push({ id: pane_id, left: [], right: [] });\n    newState.activeIndex = newState.panes.length - 1;\n    this.setState(newState);\n  };\n\n  generateSimple = (ticket_id, panel) => {\n    const generateSimpleDev = param => {\n      let newArray = Array.from(Array(4).keys());\n      return newArray.map(item => (\n        <button\n          style={{\n            backgroundColor: checkColor(\n              this.state.tickets,\n              ticket_id,\n              panel,\n              4 * param + (item + 1)\n            )\n          }}\n          className={\"game\"}\n          key={4 * param + (item + 1)}\n          onClick={() =>\n            this.handleClick(ticket_id, panel, 4 * param + (item + 1))\n          }\n        >\n          {4 * param + (item + 1)}\n        </button>\n      ));\n    };\n    let newArray = Array.from(Array(5).keys());\n    return newArray.map((item, i) => (\n      <div key={item + i}>{generateSimpleDev(item)}</div>\n    ));\n  };\n\n  handleClick = (ticket_id, panel, id) => {\n    const newState = { ...this.state };\n    const ticketIndex = newState.tickets.findIndex(\n      x => x.id === parseInt(ticket_id)\n    );\n    const btnIndex = newState.tickets[ticketIndex][panel].findIndex(\n      x => x === id\n    );\n    if (btnIndex === -1) newState.tickets[ticketIndex][panel].push(id);\n    else\n      newState.tickets[ticketIndex][panel] = newState.tickets[ticketIndex][\n        panel\n      ].filter(item => item !== id);\n    this.setState(newState);\n  };\n\n  handleRandom = ticket_id => {\n    const generateRandomArray = () => {\n      let arr = [];\n      while (arr.length < 4) {\n        let r = Math.floor(Math.random() * 20) + 1;\n        if (arr.indexOf(r) === -1) arr.push(r);\n      }\n      return arr;\n    };\n    const newState = { ...this.state };\n    const ticketIndex = newState.tickets.findIndex(\n      x => x.id === parseInt(ticket_id)\n    );\n    newState.tickets[ticketIndex].left = generateRandomArray(ticket_id);\n    newState.tickets[ticketIndex].right = generateRandomArray(ticket_id);\n    this.setState(newState);\n  };\n\n  handleClear = ticket_id => {\n    const newState = { ...this.state };\n    const ticketIndex = newState.tickets.findIndex(\n      x => x.id === parseInt(ticket_id)\n    );\n    newState.tickets[ticketIndex].left = [];\n    newState.tickets[ticketIndex].right = [];\n\n    this.setState(newState);\n  };\n\n  returnPane = pane_id => {\n    return {\n      menuItem: `Билет № ${pane_id}`,\n      render: () => (\n        <Tab.Pane id={pane_id} attached={false}>\n          <Form>\n            <Form.Group widths=\"equal\">\n              <div className={\"gamezone\"}>\n                {this.generateSimple(pane_id, \"left\")}\n              </div>\n              <div className={\"gamezone\"}>\n                {this.generateSimple(pane_id, \"right\")}\n              </div>\n            </Form.Group>\n            <Form.Field style={{ textAlign: \"center\", marginRight: \"25px\" }}>\n              <p>\n                Отметьте не менее 4 чисел в каждом поле. Стоимость каждого\n                билета - 100 рублей\n              </p>\n            </Form.Field>\n            <Button\n              color={\"yellow\"}\n              basic={true}\n              floated={\"left\"}\n              icon={\"random\"}\n              onClick={() => this.handleRandom(pane_id)}\n              content={\"Случайно\"}\n            />\n            <Button\n              color={\"red\"}\n              icon={\"remove\"}\n              basic={true}\n              floated={\"right\"}\n              style={{ marginRight: \"25px\" }}\n              onClick={() => this.handleClear(pane_id)}\n              content={\"Очистить\"}\n            />\n            <br />\n            <br />\n          </Form>\n        </Tab.Pane>\n      )\n    };\n  };\n\n  handleDrawChange = (e, { value }) => {\n    const newState = { ...this.state };\n    newState.draw = value;\n    this.setState(newState);\n  };\n\n  handleDropAll = () => {\n    const newState = this.defaultState;\n    newState.panes = [this.returnPane(1)];\n    newState.tickets = [{ id: 1, left: [], right: [] }];\n    newState.activeIndex = 0;\n    this.setState(newState);\n  };\n\n  handleTabChange = (e, { activeIndex }) => this.setState({ activeIndex });\n\n  render() {\n    const { panes, tickets, draw, activeIndex } = this.state;\n    let combinations = returnCombinations(tickets);\n    let price = combinations * draw * 100;\n    let ticketsNum = checkTickets(tickets);\n    const options = [...Array(5)].map((_, i) => {\n      return { key: i + 1, text: i + 1, value: i + 1 };\n    });\n    return (\n      <Grid columns={2} style={{ backgroundColor: \"aliceblue\" }}>\n        <Grid.Row>\n          <Grid.Column width={9}>\n            <Segment>\n              <Tab\n                menu={{\n                  secondary: true,\n                  pointing: true,\n                  stackable: true,\n                  className: \"wrapped\"\n                }}\n                activeIndex={activeIndex}\n                panes={panes}\n                onTabChange={this.handleTabChange}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Segment>\n              <Table basic={\"very\"} className={\"ui very basic table\"}>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell colSpan={2} textAlign={\"center\"}>\n                      <h2>4 из 20</h2>\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>Кол-во тиражей</Table.Cell>\n                    <Table.Cell textAlign={\"right\"}>\n                      <Dropdown\n                        compact\n                        selection\n                        options={options}\n                        value={draw}\n                        onChange={this.handleDrawChange}\n                      />\n                    </Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Билетов</Table.Cell>\n                    <Table.Cell textAlign={\"right\"}>{ticketsNum}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Комбинаций</Table.Cell>\n                    <Table.Cell textAlign={\"right\"}>{combinations}</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n                <Table.Footer>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <h4>Сумма</h4>\n                    </Table.HeaderCell>\n                    <Table.HeaderCell textAlign={\"right\"}>\n                      <h4>{price}</h4>\n                    </Table.HeaderCell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.HeaderCell textAlign={\"center\"} colSpan={2}>\n                      <Button\n                        color={\"green\"}\n                        content={\"Подтвердить\"}\n                        disabled={ticketsNum <= 0}\n                      />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <Button\n                        animated={true}\n                        color={\"green\"}\n                        onClick={this.handleAddPane}\n                        basic={true}\n                      >\n                        <Button.Content visible>\n                          <Icon name={\"plus\"} /> Добавить\n                        </Button.Content>\n                        <Button.Content hidden>+ 1 билет</Button.Content>\n                      </Button>\n                    </Table.HeaderCell>\n                    <Table.HeaderCell textAlign={\"right\"}>\n                      <Button\n                        color={\"red\"}\n                        icon={\"refresh\"}\n                        onClick={this.handleDropAll}\n                        basic={true}\n                        content={\"Сбросить всё\"}\n                        style={{ float: \"right\" }}\n                      />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Footer>\n              </Table>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Modal } from \"semantic-ui-react\";\nimport Content from \"./Content\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={\"main\"}>\n        <Modal size={\"large\"} open={true} className={\"modal\"}>\n          <Modal.Content>\n            <Content />\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}